<div id="cesiumContainer"></div>

<script>
    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIwMzQ2N2UzMi0wNzIzLTQzN2ItYWExYi0xZWM5MWZjNTQzNjUiLCJpZCI6MzE5MDk5LCJpYXQiOjE3NTE4NjY0NTJ9.Z7ZakLa9T-7er2aTf9m_MEhF8Di-gTDted1Xn-igj9U';
    var sampleData = [
        { name: "Westminster City Hall", lon: -0.1372, lat: 51.4957},
        { name: "Location A", lon: -0.1276, lat: 51.5074 },
        { name: "Location B", lon: -0.142, lat: 51.515 },
        { name: "Location C", lon: -0.1, lat: 51.51 }
    ];

    var viewer = new Cesium.Viewer("cesiumContainer", {
        animation: false,
        baseLayerPicker: true,
        navigationHelpButton: false,
        sceneModePicker: true,
        homeButton: false,
        geocoder: true,
        fullscreenButton: true,
        timeline: false,
    });

    // onpageshow 3d tiles
    // async function loadTileset(){
    //     const osmBuildingsTileset = await Cesium.createOsmBuildingsAsync();
    //     viewer.scene.primitives.add(osmBuildingsTileset);
    // }

    // loadTileset();

    // Add each point
    var pinBuilder = new Cesium.PinBuilder();

    sampleData.forEach(function(point) {
        viewer.entities.add({
            name: point.name,
            position: Cesium.Cartesian3.fromDegrees(point.lon, point.lat, 1.0),
            billboard: {
                image: pinBuilder.fromUrl("./images/sensor.png", Cesium.Color.fromCssColorString('#3f51b5'), 48),
            },
            label: {
                text: point.name,
                font: "14pt sans-serif",
                style: Cesium.LabelStyle.FILL_AND_OUTLINE,
                outlineWidth: 2,
                verticalOrigin: Cesium.VerticalOrigin.BOTTOM,
                pixelOffset: new Cesium.Cartesian2(0, 20)
            }
        });
    });

    // Camera View set
    viewer.camera.setView({
        destination: Cesium.Cartesian3.fromDegrees(sampleData[0].lon, sampleData[0].lat, 2000.0),
        orientation: {
            heading: Cesium.Math.toRadians(0.0),
            pitch: Cesium.Math.toRadians(-40.0),
            roll: 0.0
        }
    });
</script>