@using Newtonsoft.Json
@{
    var sites = ViewBag.SiteList as List<DT_App.Models.SiteModel>;
    var dataset = ViewBag.DataList as List<DT_App.Models.DataView>;
    var siteJson = JsonConvert.SerializeObject(sites);
    var historicalJson = JsonConvert.SerializeObject(dataset);
    var lastqueryDateTime = (DateTime)ViewBag.LastQueryDate;
    var viewId = (int)ViewBag.ViewID;
    ViewData["Title"] = "Forecast";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .top-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 20px;
        background-color: #f5f5f5;
    }

        .top-bar h2 {
            margin: 0;
        }

    .menu-buttons button {
        width: 50px;
        height: 50px;
        margin-left: 10px;
        background-color: #444;
        color: white;
        border: none;
        font-size: 1.2em;
        cursor: pointer;
        border-radius: 8px;
    }

        .menu-buttons button:hover {
            background-color: #555;
        }

    .main-container {
        display: flex;
        height: 80vh;
        width: 100%;
    }

    .test-container {
        width: 30%;
        background-color: #eee;
        padding: 20px;
        overflow-y: auto;
    }

    .content {
        width: 70%;
        position: relative;
    }

    #contentContainer {
        width: 100%;
        height: 100%;
    }

    #cesiumContainer {
        width: 100%;
        height: 100%;
        margin: 0;
        padding: 0;
        overflow: hidden;
    }
</style>

<script>
    window.siteData = @Html.Raw(siteJson);
    window.historicalData = @Html.Raw(historicalJson);
    console.log("Loaded siteData globally:", window.siteData);
    console.log("Loaded historicalData globally:", window.historicalData);
</script>
<input type="hidden" id="hViewId" value="@viewId" />
<div class="top-bar">
    <h2>@ViewData["Title"] - <label id="lblSubView">Map View</label></h2>
    <div class="menu-buttons">
        <button id="btnTraffic"><i class="fas fa-car"></i></button>
        <button id="btnWeather"><i class="fas fa-cloud-sun"></i></button>
        <button id="btnPollution"><i class="fas fa-smog"></i></button>
        <button id="btnCombined"><i class="fas fa-layer-group"></i></button>
    </div>
</div>

<div class="main-container">
    <div class="test-container">
        <p>Filters:</p>
        <div class="col-12">
            <div class="mb-3">
                <label class="form-control-label">Measured Date</label>
                <input id="queryDate" type="date" value="@lastqueryDateTime.Date.ToString("yyyy-MM-dd")" class="form-control">

                <label class="form-control-label mt-2">Hour</label>
                <select id="queryHour" class="form-control">
                    @for (int hour = 0; hour < 24; hour++)
                    {
                        @if (lastqueryDateTime.Hour == hour)
                        {
                            <option value="@hour.ToString("D2")" selected>@hour.ToString("D2")</option>
                        }
                        else
                        {
                            <option value="@hour.ToString("D2")">@hour.ToString("D2")</option>
                        }

                    }
                </select>

                <a id="analyticsLink" class="nav-link glass-btn mt-2" href="#">
                    Show on Map
                </a>
            </div>
        </div>
    </div>

    <div class="content" id="contentContainer">
        @switch (viewId)
        {
            case 1:
                @await Html.PartialAsync("_TrafficPartial")
                ;
                break;
            case 2:
                @await Html.PartialAsync("_WeatherPartial")
                ;
                break;
            case 3:
                @await Html.PartialAsync("_PollutionPartial")
                ;
                break;
            case 4:
                @await Html.PartialAsync("_CombinedPartial")
                ;
                break;
            case 0:
                @await Html.PartialAsync("_CombinedPartial")
                ;
                break;
        }
    </div>
</div>

<script>
    $(document).ready(function () {
        
        $("#btnTraffic").click(function () {
            $("#lblSubView").text("Traffic View");
            loadPartial('TrafficPartial');
        });

        $("#btnWeather").click(function () {
            $("#lblSubView").text("Weather View");
            loadPartial('WeatherPartial');
        });

        $("#btnPollution").click(function () {
            $("#lblSubView").text("Pollution View");
            loadPartial('PollutionPartial');
        });

        $("#btnCombined").click(function () {
            $("#lblSubView").text("Combined View");
            loadPartial('CombinedPartial');
        });

        $("#analyticsLink").click(function (e) {
            e.preventDefault();

            let dateVal = $("#queryDate").val();
            const hourVal = $("#queryHour").val();

            if (!dateVal || !hourVal) {
                alert("Please select both date and hour.");
                return;
            }

            // Check if date is in DD-MM-YYYY, convert if needed
            if (dateVal.includes("-") && dateVal.split("-")[0].length === 2) {
                const parts = dateVal.split("-");
                dateVal = `${parts[2]}-${parts[1]}-${parts[0]}`;
            }

            // Construct datetime string
            const datetimeString = dateVal + " " + hourVal + ":00:00";

            // Build URL
            const baseUrl = '@Url.Action("Index", "Forecast")';
            const viewId = $("#hViewId").val();
            const finalUrl = `${baseUrl}?queryDatetime=${encodeURIComponent(datetimeString)}&viewId=${viewId}`;

            console.log("Redirecting to: " + finalUrl);

            window.location.href = finalUrl;
        });

        function loadPartial(partialName) {
            $("#contentContainer").load('/Forecast/' + partialName);
        }
    });
</script>